{"version":3,"sources":["components/templates/index.module.css","components/atoms/description/index.module.css","components/atoms/headerlabel/index.module.css","components/atoms/count/index.module.css","components/atoms/upvote/index.module.css","components/atoms/logo/index.module.css","components/organisms/header/index.module.css","hooks/use-store.js","libs/fetch.js","libs/fetchstream.js","stores/liststore.js","libs/store.js","utils/index.js","components/atoms/headerlabel/index.js","components/atoms/count/index.js","components/atoms/upvote/index.js","components/atoms/description/index.js","components/molecules/newsitem/index.js","components/organisms/news/index.js","components/atoms/logo/index.js","components/organisms/header/index.js","components/organisms/chart/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStore","store","filterBy","useState","get","state","setState","setStore","useCallback","value","set","filterFunc","stream","getStream","observable","pipe","distinctUntilChanged","p","c","Array","isArray","find","filter","isEqual","useEffect","subscribe","unsubscribe","handlers","serialize","obj","prefix","reduce","output","hasOwnProperty","k","push","encodeURIComponent","join","fetchRx","url","resolve","reject","headers","optionParams","path","Promise","res","rej","options","pre","isMedia","assign","accept","method","query","toUpperCase","body","JSON","stringify","Headers","status","error","request","Request","credentials","mode","noParseStatusCodes","window","fetch","then","response","ok","includes","message","contentType","json","blob","e","err","post","FetchStream","inputStream","this","outputStream","BehaviorSubject","lastValue","v","lastInput","triggerred","input","data","next","x","emit","oldStreamData","getValue","currentObserver","requestOptions","token","mock","fetchWrapper","newStreamData","statusCode","setTimeout","NewListStore","initialValue","observers","interceptors","loadServerData","serverData","isFunction","call","merge","requestStream","Subject","registerObservables","registerFetchObserver","interceptor","fetchStream","trigger","processResponse","outputField","loadingLabel","statusLabel","responseInterceptor","parse","config","setResponse","val","observer","storeData","configkey","successCallback","errorCallback","hardSet","label","map","undefined","serverDataLabel","isEmpty","observerCopy","clonedeep","formatter","configData","result","req","labelName","generatedId","uniqueId","setObj","currentValue","newValue","location","protocol","host","tags","page","pageNo","initialServerData","unescape","INITIAL_DATA","getServerInitialData","initialData","newsList","Theme","white","HeaderLabel","theme","children","selectedTheme","className","Styles","defaultProps","Count","isHighlighted","count","selected","UpVote","isUpVoted","onSelect","upvote","onClick","NewsDetail","title","author","created_at","domainName","URL","hostname","getDomainName","time","timeStamp","elapsed","Math","floor","Date","now","a","minute","hour","day","timeSince","link","target","rel","href","subtext","NewsItem","item","key","id","num_comments","points","News","pageList","Logo","src","alt","img","Header","headerClassName","linkButton","LineChart","chartOptions","categores","chart","type","backgroundColor","text","credits","enabled","exporting","yAxis","xAxis","legend","layout","align","verticalAlign","plotOptions","series","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","getConfig","highcharts","Highcharts","App","match","ListStore","listStoreData","params","load","styleClass","DefaultTemplateStyle","mainHeader","mainContainer","hits","graphWrapper","graph","Boolean","ReactDOM","render","StrictMode","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.24f2cab2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"templates_mainHeader__2zH-2\",\"mainContainer\":\"templates_mainContainer__FtqFf\",\"main\":\"templates_main__H45c6\",\"header-menu\":\"templates_header-menu__Z-c4-\",\"brand\":\"templates_brand__w-NkY\",\"sn\":\"templates_sn__2c8ed\",\"graphWrapper\":\"templates_graphWrapper__8tZn9\",\"graph\":\"templates_graph__2aZBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"description_title__xMjTS\",\"link\":\"description_link__1xdCv\",\"subtext\":\"description_subtext__8ZXbn\",\"a\":\"description_a__3isYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"headerlabel_label__2HUPV\",\"white\":\"headerlabel_white__u4SMq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"count_selected__2kS8l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"upvote\":\"upvote_upvote__2Mhy-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"logo_img__256Cp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkButton\":\"header_linkButton__3h29t\"};","import { useState, useEffect, useCallback } from 'react';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport get from 'lodash.get';\nimport isEqual from 'lodash.isequal';\n\n/**\n *  Hook to attach observers to components\n *\n * */\n\nconst useStore = (store, filterBy) => {\n    const [state, setState] = useState(store.get());\n    const setStore = useCallback((value) => store.set(value), [store]);\n    const filterFunc = useCallback(() => {\n        const stream = store.getStream();\n        let observable = null;\n        if (filterBy) {\n            observable = stream.pipe(distinctUntilChanged((p, c) => {\n                const filterByArray = Array.isArray(filterBy) ? filterBy : [filterBy];\n                return !filterByArray.find((filter) => !isEqual(get(p, filter, null), get(c, filter, null)));\n            }));\n        }\n        return observable || stream;\n    },\n    [store, filterBy]);\n\n    useEffect(() => {\n        const observable = filterFunc().subscribe((value) => setState(value));\n        return () => observable.unsubscribe();\n    },\n    [filterFunc, store]);\n\n    return [state, setStore];\n};\n\nexport default useStore;\n","import assign from 'lodash.assign';\nimport reduce from 'lodash.reduce';\n\nconst handlers = {};\n\nfunction serialize(obj, prefix) {\n    return reduce(obj, (output, value, p) => {\n        // eslint-disable-next-line no-prototype-builtins\n        if (obj.hasOwnProperty(p)) {\n            const k = prefix ? `${prefix}[${p}]` : p;\n            output.push(typeof value === 'object' ? serialize(value, k) : `${encodeURIComponent(k)}=${encodeURIComponent(value)}`);\n        }\n        return output;\n    }, []).join('&');\n}\n\nexport const registerHandlers = (key, f) => {\n    handlers[key] = f;\n};\n\n\nfunction fetchRx(url, optionParams = {}) {\n    let resolve;\n    let reject;\n    let headers;\n    let path = url;\n    const p = new Promise(((res, rej) => {\n        resolve = res; reject = rej;\n    }));\n    let options = optionParams;\n    if (handlers.pre) {\n        options = handlers.pre(url, options);\n    }\n\n    if (!options.isMedia) {\n        options.headers = assign({}, options.headers, {\n            'content-type': 'application/json;charset=utf-8',\n            accept: 'application/json',\n        });\n    } else {\n        options.headers = assign({}, options.headers);\n    }\n\n    options.method = options.method || 'GET';\n\n    if (options.query) {\n        path = `${url}?${serialize(options.query)}`;\n    }\n\n    if (options.method.toUpperCase() !== 'GET' && options.body && !options.isMedia) {\n        options.body = JSON.stringify(options.body);\n    }\n\n    if (options.headers) {\n        // eslint-disable-next-line no-undef\n        headers = new Headers(options.headers);\n    }\n\n    const request = new Request(path, {\n        method: options.method,\n        body: options.body,\n        headers,\n        credentials: options.credentials,\n        mode: options.mode,\n    });\n\n    let status;\n    let error;\n    const noParseStatusCodes = [204, 500];\n    // eslint-disable-next-line consistent-return\n    window.fetch(request).then((response) => {\n        error = (!response.ok);\n        // eslint-disable-next-line prefer-destructuring\n        status = response.status;\n        if (!noParseStatusCodes.includes(status)) {\n            try {\n                const contentType = response.headers.get('Content-Type');\n                if (contentType.includes('json')) { return response.json(); }\n                if (contentType.includes('application/x-download')) { return response.blob(); }\n                return { body: 'no content' };\n            } catch (e) {\n                return { body: 'no content' };\n                // reject({ status: null, body: { message: 'something went worng' } });\n            }\n        } else if (status === 204) {\n            return { body: 'no content' };\n        } else {\n            reject({ status, body: { message: 'something went worng' } });\n        }\n    },\n    // eslint-disable-next-line no-unused-vars\n    (err) => {\n        reject({ status: null, body: { message: 'Request failed, please try again' } });\n    })\n        .then(\n            (json) => {\n                if (handlers.post) {\n                    const result = handlers.post(status, json);\n                    if (!result) { return; }\n                }\n                if (!error) {\n                    resolve(json);\n                } else {\n                    reject({ status, body: json });\n                }\n            },\n        );\n    return p;\n}\n\nexport default fetchRx;\n","\nimport assign from 'lodash.assign';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport fetchWrapper from './fetch';\n\n\nexport default class FetchStream {\n    constructor(inputStream, options) {\n        this.options = options || {};\n        this.inputStream = inputStream;\n        this.outputStream = new BehaviorSubject();\n        this.lastValue = null;\n        this.outputStream.subscribe((v) => { this.lastValue = v; });\n    }\n\n    reload() {\n        this.fetch(this.lastInput);\n    }\n\n    trigger() {\n        if (!this.triggerred) {\n            this.triggerred = true;\n            this.inputStream.subscribe((input) => {\n                this.lastInput = input;\n                this.fetch(input);\n            });\n        }\n    }\n\n    emit(data) {\n        this.outputStream.next(data);\n    }\n\n    getValue() {\n        return this.lastValue;\n    }\n\n    getStream() {\n        return this.outputStream.pipe(filter((x) => !!x));\n    }\n\n    fetch(input) {\n        if (input.error) {\n            this.emit({ status: 'error', message: input.error });\n            return;\n        }\n\n        let oldStreamData = this.getValue();\n        this.outputStream.next(assign({}, oldStreamData, { status: 'loading', currentObserver: input.currentObserver }));\n        oldStreamData = this.getValue();\n        const { url } = input;\n        const requestOptions = {\n            method: input.method,\n            headers: input.headers,\n            query: input.query,\n            body: input.body,\n            isMedia: input.isMedia,\n            token: input.token,\n            credentials: input.credentials,\n            mode: input.mode,\n        };\n\n        if (input.mock) {\n            setTimeout(() => {\n                this.outputStream.next({\n                    data: input.mock,\n                    status: 'loaded',\n                    currentObserver: input.currentObserver,\n                });\n            });\n            return;\n        }\n        const p = fetchWrapper(url, requestOptions);\n        p.then((response) => {\n            const newData = response;\n            const newStreamData = {\n                data: newData,\n                status: 'loaded',\n                currentObserver: input.currentObserver,\n            };\n            this.outputStream.next(newStreamData);\n        }, (response) => {\n            this.outputStream.next({\n                status: 'error',\n                statusCode: response.status,\n                body: response.body,\n                currentObserver: input.currentObserver,\n            });\n        });\n        // eslint-disable-next-line consistent-return\n        return p;\n    }\n}\n","import Store from '../libs/store';\nimport isEmpty from 'lodash.isempty';\nimport { getServerInitialData, getDomain } from '../utils';\n\nconst NewListStore = new Store({},\n    [\n        {\n            label: 'LoadNewsList',\n            request: {\n                method: 'get',\n            },\n            formatter: (data, request) => {\n                request.url = `${getDomain()}/api/v1/search`\n                request.query ={\n                    tags: 'story',\n                    page: data.pageNo || 0,\n                }\n                return request;  \n            },\n            outputField: 'newsList',\n            statusLabel: 'newsListStatus',\n            parse: (output) => {\n               var data = output.data || [];\n               return data;\n              /* data.hits = map(data.hits, () => {\n\n               }) */\n            }\n        },\n    ],\n    null,\n    () => {\n        const serverData = getServerInitialData();\n        let initialData = {};\n\t\tif (!isEmpty(serverData)) {\n\t\t\tinitialData = {\n\t\t\t\tnewsList: serverData.newsList,\n\t\t\t\tpageNo: serverData.pageNo,\n            }\n\t\t}\n\t\treturn initialData;\n\t});\n\nexport default NewListStore;","import { BehaviorSubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport merge from 'lodash.merge';\nimport isFunction from 'lodash.isfunction';\nimport uniqueId from 'lodash.uniqueid';\nimport assign from 'lodash.assign';\nimport find from 'lodash.find';\nimport get from 'lodash.get';\nimport isEmpty from 'lodash.isempty';\nimport clonedeep from 'lodash.clonedeep';\nimport FetchStream from './fetchstream';\n\nexport default class Store {\n    constructor(initialValue, observers, interceptors, loadServerData) {\n        let serverData = {};\n        this.observers = observers || [];\n        if (isFunction(loadServerData)) {\n            serverData = loadServerData.call(this);\n        }\n        this.initialValue = merge({}, initialValue, serverData);\n        this.stream = new BehaviorSubject(initialValue);\n        this.requestStream = new Subject();\n        this.registerObservables(this.observers);\n        this.registerFetchObserver();\n        this.interceptor = interceptors;\n    }\n\n    registerFetchObserver() {\n        this.fetchStream = new FetchStream(this.requestStream);\n        this.fetchStream.trigger();\n        this.fetchStream.getStream().subscribe((output) => this.processResponse(output));\n    }\n\n    // eslint-disable-next-line consistent-return\n    processResponse(input) {\n        const { currentObserver } = input;\n        const { outputField } = currentObserver;\n        // eslint-disable-next-line no-param-reassign\n        delete input.currentObserver;\n        const loadingLabel = currentObserver.statusLabel || 'loading';\n        const { responseInterceptor } = this.interceptor || {};\n        let output = input;\n\n        const { status } = output;\n\n        if (status === 'loading') {\n            setTimeout(() => {\n                this.set({ [loadingLabel]: 'loading' });\n            });\n        } else if (status === 'loaded') {\n            if (isFunction(responseInterceptor)) {\n                output = this.interceptor.responseInterceptor(output);\n            }\n            let data = null;\n            if (isFunction(currentObserver.parse)) {\n                data = currentObserver.parse(output, currentObserver.config);\n            } else {\n                data = output.data;\n            }\n            setTimeout(() => {\n                this.setResponse(outputField, loadingLabel, data, 'loaded', currentObserver);\n            });\n        } else if (status === 'error') {\n            if (isFunction(responseInterceptor)) {\n                output = this.interceptor.responseInterceptor(output);\n            }\n            if (isFunction(currentObserver.error)) {\n                const val = currentObserver.error(output, currentObserver.config);\n                this.setResponse(outputField, loadingLabel, val, 'error', currentObserver);\n                return false;\n            }\n            setTimeout(() => {\n                this.setResponse(outputField, loadingLabel, output.body, 'error', currentObserver);\n            });\n        }\n        return false;\n    }\n\n    setResponse(outputField, loadingLabel, data, status, observer) {\n        let storeData = this.get();\n        const config = storeData[observer.configkey];\n        if (isFunction(get(config, ['successCallback'], null)) && status === 'loaded') {\n            config.successCallback(data);\n        }\n        if (isFunction(get(config, ['errorCallback'], null)) && status === 'error') {\n            config.errorCallback(data);\n        }\n        // fetch latest data after callbacks\n        storeData = this.get();\n        storeData[outputField] = data;\n        storeData[loadingLabel] = status;\n        delete storeData[observer.configkey];\n        this.hardSet(storeData);\n    }\n\n    getObservable(label) {\n        return find(this.observers, (observer) => observer.label === label);\n    }\n\n    registerObservables(observers) {\n        return observers.map((observer) => (\n            this.stream.pipe(\n                distinctUntilChanged((p, c) => p[observer.label] === c[observer.label]),\n                filter((p) => p[observer.label] !== null && p[observer.label] !== undefined),\n            ).subscribe(() => {\n                const data = this.get();\n                if (observer.serverDataLabel) {\n                    const serverData = get(data, observer.serverDataLabel);\n                    // eslint-disable-next-line no-param-reassign\n                    delete observer.serverDataLabel;\n                    if (!isEmpty(serverData)) {\n                        return;\n                    }\n                }\n                const observerCopy = clonedeep(observer);\n                let value = observerCopy.request;\n                const config = data[observer.label];\n                if (isFunction(observer.formatter)) {\n                    const configData = data[config];\n                    const result = observer.formatter(data, observerCopy.request, configData);\n                    if (Array.isArray(result)) {\n                        const [req, outputField, loadingLabel] = result;\n                        if (outputField) {\n                            observerCopy.outputField = outputField;\n                        }\n                        if (loadingLabel) {\n                            observerCopy.statusLabel = loadingLabel;\n                        }\n                        observerCopy.config = configData || null;\n                        value = req;\n                    } else {\n                        value = result;\n                        observerCopy.config = configData || null;\n                    }\n                }\n                if (value) {\n                    observerCopy.configkey = config;\n                    value.currentObserver = observerCopy;\n                    this.requestStream.next(value);\n                }\n            })\n        ));\n    }\n\n    load(labelName, config) {\n        const generatedId = uniqueId('storeload');\n        const setObj = {\n            [labelName]: generatedId,\n        };\n        if (config) {\n            setObj[generatedId] = config;\n        }\n        this.set(setObj);\n    }\n\n\n    resetData() {\n        return this.stream.next(merge({}, this.initialValue));\n    }\n\n    set(value) {\n        const currentValue = this.get();\n        const newValue = assign({}, currentValue, value);\n        return this.stream.next(newValue);\n    }\n\n    hardSet(value) {\n        return this.stream.next(value);\n    }\n\n    get() {\n        return merge({}, this.stream.getValue());\n    }\n\n    getStream() {\n        return this.stream.pipe(filter((x) => !!x));\n    }\n}\n","import isEmpty from 'lodash.isempty';\n\n\nexport const getDomainName = (url) => {\n    if(!url){\n        return '';\n    }\n    return new URL(url).hostname;\n}\n\nexport const getDomain = () => {\n    return window.location.protocol+'//'+window.location.host;\n}\n\nexport const timeSince = (timeStamp) => {\n    let minute = 60;\n    let hour   = minute * 60;\n    let day    = hour   * 24;\n    let month  = day    * 30;\n    let year   = day    * 365;\n\n    let suffix = ' ago';\n\n    let elapsed = Math.floor((Date.now() - new Date(timeStamp)) / 1000);\n\n    if (elapsed < minute) {\n        return 'just now';\n    }\n\n    // get an array in the form of [number, string]\n    let a = ((elapsed < hour  && [Math.floor(elapsed / minute), 'minute']) ||\n            (elapsed < day   && [Math.floor(elapsed / hour), 'hour'])    ||\n            (elapsed < month && [Math.floor(elapsed / day), 'day']) ||\n            (elapsed < year  && [Math.floor(elapsed / month), 'month'])   ||\n            ([Math.floor(elapsed / year), 'year']));\n\n    // pluralise and append suffix\n    return a[0] + ' ' + a[1] + (a[0] === 1 ? '' : 's') + suffix;\n}\n\n\nexport const getServerInitialData = () => {\n\tif (typeof window == 'undefined') {\n        const initialServerData ={};\n\t\treturn !isEmpty(initialServerData) ? JSON.parse(unescape(initialServerData)) : {};\n\t} else {\n\t\treturn window.INITIAL_DATA;\n\t}\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './index.module.css'\n\nexport const Theme = {\n    white: 'white'\n}\n\nconst HeaderLabel = ({theme, children}) => {\n    const selectedTheme = Theme[theme] || 'white';\n    return (<label\n                className={`${Styles[selectedTheme]} ${Styles.label}`}\n            >\n                {children}\n            </label>) \n}\n\nHeaderLabel.defaultProps = {\n    theme: 'white'\n}\n\nHeaderLabel.propTypes = {\n    theme: PropTypes.string,\n    children: PropTypes.any\n}\n\nexport default HeaderLabel;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './index.module.css';\n\n\nconst Count = ({isHighlighted, count}) => {\n\n    return(\n        <span\n            className={(isHighlighted)? Styles.selected : ''}\n        >\n            {count}\n        </span>\n    )\n}\n\nCount.propTypes = {\n    isHighlighted: PropTypes.bool,\n    count: PropTypes.number,\n}\n\nCount.defaultProps = {\n    isHighlighted: false,\n    count: false,\n}\n\nexport default Count;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './index.module.css';\n\n\nconst UpVote = ({isUpVoted, onSelect}) => {\n    if(isUpVoted){\n        return null;\n    }\n    return(\n        <span\n            className={Styles.upvote}\n            onClick={onSelect}>\n                ▲\n        </span>\n    )\n}\n\nUpVote.propTypes = {\n    isUpVoted: PropTypes.bool,\n    onSelect: PropTypes.func,\n}\n\nUpVote.defaultProps = {\n    isUpVoted: false,\n    onSelect: () => {},\n}\n\nexport default UpVote;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './index.module.css';\nimport { getDomainName, timeSince } from '../../../utils';\n\nconst NewsDetail = ({title, author, created_at, url}) => {\n    const domainName = getDomainName(url);\n    const time = timeSince(created_at);\n    return(\n        <div>\n            <div className={Styles.title}>\n                <p>{title} </p>\n\n                <span className={Styles.link}>\n                    {\n                        (url) &&\n                        (<a target=\"_blank\" rel=\"noopener noreferrer\" className={'a'} href={url}>{domainName}</a>)\n                    }\n                    &nbsp;  by <label>{author}</label>\n                </span>\n                <span className={Styles.subtext}> \n                    <label>\n                        &nbsp;{time}\n                    </label>\n                </span>\n            </div>\n        </div>\n    )\n}\n\nNewsDetail.propTypes = {\n    title: PropTypes.string,\n    author: PropTypes.string,\n    created_at: PropTypes.number,\n    url: PropTypes.string,\n}\n\n\nexport default NewsDetail;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Count from '../../atoms/count';\nimport UpVote from '../../atoms/upvote';\nimport NewsDetail from '../../atoms/description';\n\nconst NewsItem = ({item}) => {\n    return(<tr key={item.id}>\n        <td > \n            <Count  count={item.num_comments}></Count>\n        </td>\n        <td>\n            <Count count={item.points}></Count>\n        </td>\n        <td>\n            <UpVote></UpVote>\n        </td>\n        <td>\n            <NewsDetail {...item}></NewsDetail>\n        </td>\n    </tr>)\n}\n\nNewsItem.propTypes ={\n    item: PropTypes.object,\n}\n\nexport default NewsItem\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../../atoms/headerlabel';\nimport NewsItem from '../../molecules/newsitem';\n\nconst News = ({\n    pageList = []\n}) => {\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>\n                        <Label>Comments</Label>\n                    </th>\n                    <th>\n                        <Label>Vote Count</Label>\n                    </th>\n                    <th>\n                        <Label>Up Vote</Label>\n                    </th>\n                    <th>\n                        <Label>News Details</Label>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    pageList.map((item) => <NewsItem item={item}></NewsItem>)\n                }\n            </tbody>\n        </table>\n    )\n}\n\nNews.propTypes = {\n    pageList: PropTypes.array,\n}\n\nexport default News;","import React from 'react';\nimport Styles from './index.module.css'\n\nconst Logo = () => {\n    return (<img\n                src={process.env.PUBLIC_URL +'/logo.gif'}\n                alt='Hacker News Logo'\n                className={Styles.img}\n            >\n            </img>)\n}\n\nexport default Logo;","import React from 'react';\nimport Logo from '../../atoms/logo';\nimport Styles from './index.module.css';\n\nconst Header = (headerClassName) => {\n    return ( \n        <header className={headerClassName}>\n            <button className={Styles.linkButton} >\n                <Logo></Logo>\n            </button>\n        </header>\n    )\n};\n\nexport default Header;\n","import React from 'react';\nimport Highcharts from 'highcharts';\nimport map from 'lodash.map';\nimport HighchartsReact from 'highcharts-react-official';\n\nconst getConfig = (data) => {\n    var categores = [];\n    var points = [];\n    map(data, (value) => {\n        categores.push(value.id);\n        points.push(value.num_comments);\n    })\n    return {\n    chart: {\n        type: 'line',\n        backgroundColor: '#eee',\n    },\n    title: {\n        text: '',\n    },\n    credits: {\n        enabled: false,\n    },\n    exporting: {\n        enabled: false,\n    },\n    yAxis: {\n        title: {\n            text: 'Votes'\n        }\n    },\n    xAxis: {\n        categores: categores\n    },\n    legend: {\n        layout: 'vertical',\n        align: 'right',\n        verticalAlign: 'middle'\n    },\n\n    plotOptions: {\n        series: {\n            label: {\n                connectorAllowed: false\n            },\n            pointStart: 2010\n        }\n    },\n\n    series: [{\n        data: points,\n    }],\n\n    responsive: {\n        rules: [{\n            condition: {\n                maxWidth: 500\n            },\n            chartOptions: {\n                legend: {\n                    layout: 'horizontal',\n                    align: 'center',\n                    verticalAlign: 'bottom'\n                }\n            }\n        }]\n    }};\n};\n\n\nconst LineChart = ({ data }) => {\n    const chartOptions = getConfig(data);\n    return(<HighchartsReact\n        highcharts={Highcharts}\n        options={chartOptions}\n    >\n\n    </HighchartsReact>)\n}\n\nexport default LineChart;","import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport useStore from './hooks/use-store';\nimport ListStore from './stores/liststore';\nimport News from './components/organisms/news';\nimport DefaultTemplateStyle from './components/templates/index.module.css';\nimport Header from './components/organisms/header';\nimport LineChart from './components/organisms/chart';\n\nfunction App({match}) {\n\n  const [listStoreData] = useStore(ListStore);\n\n  const { \n    newsList = {},\n    pageNo\n    } = listStoreData;\n\n  useEffect(() => {\n     // var latestData = ListStore.get();\n     // if(latestData.pageNo !== match.params.pageNo){\n        ListStore.set({\n            pageNo: match.params.pageNo || 1,\n        });\n        ListStore.load('LoadNewsList');\n     //}\n  }, [match.params.pageNo]);\n\n\n  return (<Fragment>\n      <Header styleClass={DefaultTemplateStyle.mainHeader}></Header>\n      <div className={DefaultTemplateStyle.mainContainer}>\n        <News pageList={newsList.hits}>\n\n        </News>\n      </div>\n      <div className={DefaultTemplateStyle.graphWrapper}>\n        <div className={DefaultTemplateStyle.graph}>\n            <LineChart data={newsList.hits || []}></LineChart>\n        </div>\n     </div>\n  </Fragment>\n    \n  );\n}\nApp.propTypes = {\n    match: PropTypes.object,\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <Route path=\"/:pageNo?\" component={App}/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}